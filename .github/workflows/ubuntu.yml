name: Ubuntu
on: [push]

jobs:
  build:    
    strategy:      
      fail-fast: true
      matrix:
        os: [ubuntu-20.04]
        java: [8,11] 
        cc: [gcc-9]
        fc: [fortran-9]
        experimental: [false]
        include:          
          - os: ubuntu-20.04
            java: 11
            cc: gcc-9
            fc: gfortran-9
            experimental: true
          - os: macos-latest
            java: 8
            experimental: true
            cc: gcc-9
            fc: gfortran-9
          - os: macos-latest
            java: 11
            experimental: true
            cc: gcc-9
            fc: gfortran-9
          - os: windows-latest
            java: 8
            experimental: true
            cc: ""
            fc: ""

          
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Checkout tools repo
        uses: actions/checkout@v3
        with:
          repository: HydrologicEngineeringCenter/dss-test-data
          path: dss-test-data

      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '${{ matrix.java }}'
      - name: Install oneAPI Fortran
        if: startsWith(matrix.os,'windows')
        shell: cmd
        run: |
          curl -fSLo hpckit.exe https://registrationcenter-download.intel.com/akdlm/irc_nas/17762/w_HPCKit_p_2021.2.0.2901.exe
          start /b /wait hpckit.exe -s -x -f hpckit_extracted --log hpckit_extracted.log
          hpckit_extracted\bootstrapper.exe -s --action install --components=intel.oneapi.win.ifort-compiler --eula=accept --continue-with-optional-error=yes -p=NEED_VS2017_INTEGRATION=0 -p=NEED_VS2019_INTEGRATION=1 --log-dir=
      - name: CMake initialization
        env:
          CC: ${{ matrix.cc }}
          FC: ${{ matrix.fc }}
        run: |
          cmake .        

      - name: build 
        run: |
          cmake --build .          

      - name: Run Tests
        run: |
          ctest . --output-on-failure

      - name: build and run Fortran test program
        run: |
          cd test/Fortran
          make test

      - name: Run a one-line script
        run:  ls -l       #java -version

      # Save some artifacts
      - name: upload-artifacts hecdss.dll and javaHeclib.dll
        uses: actions/upload-artifact@v3
        with:
          name: dss
          path: |
             ${{ github.workspace }}/heclib/javaHeclib/Output/libjavaHeclib.so
             ${{ github.workspace }}/heclib/hecdss/libhecdss.so
           
